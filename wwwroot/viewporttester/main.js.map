{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/viewportinfo/viewportinfo.component.css","webpack:///./src/app/viewportinfo/viewportinfo.component.html","webpack:///./src/app/viewportinfo/viewportinfo.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-viewportinfo></app-viewportinfo>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ViewportinfoComponent } from './viewportinfo/viewportinfo.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ViewportinfoComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"div {\\r\\n    background-color: aqua;\\r\\n}\\r\\n\\r\\n.fitt-screen-css {\\r\\n    margin: 0;\\r\\n    width: 100%;\\r\\n    height: 100vh;\\r\\n    background-color: #eee;\\r\\n}\\r\\n\\r\\n.fitt-screen-js {\\r\\n    margin: 0;\\r\\n    background-color: #bbb;\\r\\n}\"","module.exports = \"<div *ngIf=\\\"showjs\\\" class=\\\"fitt-screen-js\\\" [ngStyle]=\\\"{ 'height.px': innerHeight, 'width.px': innerWidth }\\\">\\n  <button (click)=\\\"onFittScreenJsClicked($event)\\\">\\n    See css version\\n  </button>\\n  <div>\\n    innerWidth: {{innerWidth }} outerWidth: {{outerWidth }} innerHight: {{innerHeight }} outerHeight: {{outerHeight }}\\n  </div>\\n</div>\\n<div *ngIf=\\\"!showjs\\\" class=\\\"fitt-screen-css\\\">\\n  <button (click)=\\\"onFittScreenCssClicked($event)\\\">\\n    See JS version\\n  </button>\\n  <div>\\n    innerWidth: {{innerWidth }} outerWidth: {{outerWidth }} innerHight: {{innerHeight }} outerHeight: {{outerHeight }}\\n  </div>\\n</div>\\n\"","import { Component, OnInit, HostListener } from '@angular/core';\n\n\n@Component({\n  selector: 'app-viewportinfo',\n  templateUrl: './viewportinfo.component.html',\n  styleUrls: ['./viewportinfo.component.css']\n})\nexport class ViewportinfoComponent implements OnInit {\n\n  constructor() { }\n\n  innerWidth: number;\n  outerWidth: number;\n  innerHeight: number;\n  outerHeight: number;\n  showjs = false;\n\n  ngOnInit() {\n    this.innerWidth = window.innerWidth;\n    this.outerWidth = window.outerWidth;\n    this.innerHeight = window.innerHeight;\n    this.outerHeight = window.outerHeight;\n  }\n\n\n  @HostListener('window:resize', ['$event'])\n  onResize(event) {\n    setTimeout(() => {\n\n      this.innerWidth = event.target.innerWidth;\n      this.outerWidth = event.target.outerWidth;\n      this.innerHeight = event.target.innerHeight;\n      this.outerHeight = event.target.outerHeight;\n    });\n  }\n\n\n  onFittScreenJsClicked($event) {\n    this.showjs = false;\n  }\n\n  onFittScreenCssClicked($event) {\n    this.showjs = true;\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}